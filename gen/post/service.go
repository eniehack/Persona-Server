// Code generated by goa v3.0.2, DO NOT EDIT.
//
// Post service
//
// Command:
// $ goa gen github.com/eniehack/persona-server/design

package post

import (
	"context"

	"goa.design/goa/v3/security"
)

// Service is the Post service interface.
type Service interface {
	// 新規投稿
	Create(context.Context, *NewPostPayload) (err error)
	// 投稿の参照
	Reference(context.Context, *Post) (err error)
	// 投稿の削除
	Delete(context.Context, *DeletePostPayload) (err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Post"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"create", "reference", "delete"}

// NewPostPayload is the payload type of the Post service create method.
type NewPostPayload struct {
	Body string
	// JWT Token.
	Token string
}

// Post is the payload type of the Post service reference method.
type Post struct {
	// 投稿日時
	PostedAt string
	// User ID
	UserID     string
	ScreenName string
	// 投稿内容
	Body string
}

// DeletePostPayload is the payload type of the Post service delete method.
type DeletePostPayload struct {
	// unique id of the post.
	PostID string
	// JWT Token.
	Token string
}
