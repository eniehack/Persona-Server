// Code generated by goa v3.0.2, DO NOT EDIT.
//
// Authorization HTTP client types
//
// Command:
// $ goa gen github.com/eniehack/persona-server/design

package client

import (
	authorization "github.com/eniehack/persona-server/gen/authorization"
)

// LoginRequestBody is the type of the "Authorization" service "login" endpoint
// HTTP request body.
type LoginRequestBody struct {
	// User ID
	Userid   string `form:"userid" json:"userid" xml:"userid"`
	Password string `form:"password" json:"password" xml:"password"`
}

// RegisterRequestBody is the type of the "Authorization" service "register"
// endpoint HTTP request body.
type RegisterRequestBody struct {
	// User ID
	Userid string `form:"userid" json:"userid" xml:"userid"`
	// screen name of the user.
	ScreenName string `form:"screen_name" json:"screen_name" xml:"screen_name"`
	// password of the user.
	Password string `form:"password" json:"password" xml:"password"`
}

// NewLoginRequestBody builds the HTTP request body from the payload of the
// "login" endpoint of the "Authorization" service.
func NewLoginRequestBody(p *authorization.LoginPayload) *LoginRequestBody {
	body := &LoginRequestBody{
		Userid:   p.Userid,
		Password: p.Password,
	}
	return body
}

// NewRegisterRequestBody builds the HTTP request body from the payload of the
// "register" endpoint of the "Authorization" service.
func NewRegisterRequestBody(p *authorization.NewAccountPayload) *RegisterRequestBody {
	body := &RegisterRequestBody{
		Userid:     p.Userid,
		ScreenName: p.ScreenName,
		Password:   p.Password,
	}
	return body
}
