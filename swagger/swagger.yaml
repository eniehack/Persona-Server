basePath: /api/v1
consumes:
- application/json
definitions:
  CreatePostPayload:
    example:
      body: にゃーん
    properties:
      body:
        example: にゃーん
        maxLength: 500
        type: string
    required:
    - body
    title: CreatePostPayload
    type: object
  Login:
    description: ログインが成功した際に認証トークンを返すレスポンス (default view)
    example:
      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ
    properties:
      token:
        description: 認証トークン
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ
        type: string
    required:
    - token
    title: 'Mediatype identifier: application/vnd.login+json; view=default'
    type: object
  LoginAuthorizationPayload:
    example:
      password: testpassword
      userid: fugafuga
    properties:
      password:
        example: testpassword
        type: string
      userid:
        example: fugafuga
        maxLength: 15
        type: string
    required:
    - userid
    - password
    title: LoginAuthorizationPayload
    type: object
  Post:
    description: 投稿の詳細な情報を返す際のレスポンス (default view)
    example:
      body: にゃーん
      posted_at: "1993-09-04T03:58:37Z"
      screen_name: ほげほげ
      user_id: hogehoge
    properties:
      body:
        description: 投稿内容
        example: にゃーん
        type: string
      posted_at:
        description: 投稿日時
        example: "1993-09-04T03:58:37Z"
        format: date-time
        type: string
      screen_name:
        description: 投稿者のスクリーンネーム
        example: ほげほげ
        maxLength: 20
        type: string
      user_id:
        description: 投稿者
        example: hogehoge
        maxLength: 15
        type: string
    required:
    - posted_at
    - user_id
    - screen_name
    - body
    title: 'Mediatype identifier: application/vnd.post+json; view=default'
    type: object
  RegisterAuthorizationPayload:
    example:
      password: testpassword
      screen_name: ほげほげ
      userid: hogehoge
    properties:
      password:
        example: testpassword
        type: string
      screen_name:
        example: ほげほげ
        maxLength: 20
        type: string
      userid:
        example: hogehoge
        maxLength: 15
        type: string
    required:
    - userid
    - screen_name
    - password
    title: RegisterAuthorizationPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1458609066
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1458609066
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: localhost:8080
info:
  description: Layer構造を持つSNSのAPIです.
  title: Simple-SNS
  version: "0.1"
paths:
  /auth/new:
    post:
      description: 新規登録
      operationId: Authorization#register
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RegisterAuthorizationPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: リソースの作成が完了しました。
          headers:
            Location:
              pattern: /users/[0-9a-z]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: register Authorization
      tags:
      - Authorization
  /auth/signature:
    post:
      description: ログイン
      operationId: Authorization#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginAuthorizationPayload'
      produces:
      - application/vnd.login+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Login'
        "401":
          description: Unauthorized
      schemes:
      - https
      summary: login Authorization
      tags:
      - Authorization
  /posts/{post_id}:
    delete:
      description: |-
        投稿の削除

        Required security scopes:
          * `api:access`
      operationId: Post#delete
      parameters:
      - description: 投稿固有のID
        in: path
        name: post_id
        pattern: '[0-9A-Z]{26}'
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - JWT:
        - api:access
      summary: delete Post
      tags:
      - Post
    get:
      description: 投稿の参照
      operationId: Post#reference
      parameters:
      - description: 投稿固有のID
        in: path
        name: post_id
        pattern: '[0-9A-Z]{26}'
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.post+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: reference Post
      tags:
      - Post
  /posts/new:
    post:
      description: |-
        新規投稿

        Required security scopes:
          * `api:access`
      operationId: Post#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreatePostPayload'
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - JWT:
        - api:access
      summary: create Post
      tags:
      - Post
produces:
- application/json
responses:
  NoContent:
    description: No Content
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  JWT:
    description: |2-


      **Token URL**: https://localhost:8080/auth/signature

      **Security Scopes**:
        * `api:access`: API access
        * `api:admin`: 管理者によるアクセス権限
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
